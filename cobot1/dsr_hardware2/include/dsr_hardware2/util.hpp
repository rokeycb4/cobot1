#include <string>
#include "../../dsr_common2/include/DRFLEx.h"

std::string to_str(MONITORING_ACCESS_CONTROL x)
{
    if(x == MONITORING_ACCESS_CONTROL_REQUEST)  return "MONITORING_ACCESS_CONTROL_REQUEST";
    if(x == MONITORING_ACCESS_CONTROL_DENY)  return "MONITORING_ACCESS_CONTROL_DENY";
    if(x == MONITORING_ACCESS_CONTROL_GRANT)  return "MONITORING_ACCESS_CONTROL_GRANT";
    if(x == MONITORING_ACCESS_CONTROL_LOSS)  return "MONITORING_ACCESS_CONTROL_LOSS";
    if(x == MONITORING_ACCESS_CONTROL_LAST)  return "MONITORING_ACCESS_CONTROL_LAST";
    return "to_str err";
}

std::string to_str(DRL_PROGRAM_STATE x)
{
    if(x == DRL_PROGRAM_STATE_PLAY)  return "DRL_PROGRAM_STATE_PLAY";
    if(x == DRL_PROGRAM_STATE_STOP)  return "DRL_PROGRAM_STATE_STOP";
    if(x == DRL_PROGRAM_STATE_HOLD)  return "DRL_PROGRAM_STATE_HOLD";
    if(x == DRL_PROGRAM_STATE_LAST)  return "DRL_PROGRAM_STATE_LAST";
    return "to_str err";
}

std::string to_str(const ROBOT_STATE x)
{
    if(x == STATE_INITIALIZING)  return "STATE_INITIALIZING";
    if(x == STATE_STANDBY)  return "STATE_STANDBY";
    if(x == STATE_MOVING)  return "STATE_MOVING";
    if(x == STATE_SAFE_OFF)  return "STATE_SAFE_OFF";
    if(x == STATE_TEACHING)  return "STATE_TEACHING";
    if(x == STATE_SAFE_STOP)  return "STATE_SAFE_STOP";
    if(x == STATE_EMERGENCY_STOP)  return "STATE_EMERGENCY_STOP";
    if(x == STATE_HOMMING)  return "STATE_HOMMING";
    if(x == STATE_RECOVERY)  return "STATE_RECOVERY";
    if(x == STATE_SAFE_STOP2)  return "STATE_SAFE_STOP2";
    if(x == STATE_SAFE_OFF2)  return "STATE_SAFE_OFF2";
    if(x == STATE_RESERVED1)  return "STATE_RESERVED1";
    if(x == STATE_RESERVED2)  return "STATE_RESERVED2";
    if(x == STATE_RESERVED3)  return "STATE_RESERVED3";
    if(x == STATE_RESERVED4)  return "STATE_RESERVED4";
    if(x == STATE_NOT_READY)  return "STATE_NOT_READY";
    if(x == STATE_LAST)  return "STATE_LAST";
    return "to_str err";
}

std::string to_str(const ROBOT_SPACE x){
    if(x == ROBOT_SPACE_JOINT) return "ROBOT_SPACE_JOINT";
    if(x == ROBOT_SPACE_TASK)   return "ROBOT_SPACE_TASK";
    return "to_str err";
}

std::string to_str(const GPIO_CTRLBOX_DIGITAL_INDEX x){
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_1)   return "GPIO_CTRLBOX_DIGITAL_INDEX_1";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_2)   return "GPIO_CTRLBOX_DIGITAL_INDEX_2";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_3)   return "GPIO_CTRLBOX_DIGITAL_INDEX_3";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_4)   return "GPIO_CTRLBOX_DIGITAL_INDEX_4";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_5)   return "GPIO_CTRLBOX_DIGITAL_INDEX_5";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_6)   return "GPIO_CTRLBOX_DIGITAL_INDEX_6";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_7)   return "GPIO_CTRLBOX_DIGITAL_INDEX_7";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_8)   return "GPIO_CTRLBOX_DIGITAL_INDEX_8";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_9)   return "GPIO_CTRLBOX_DIGITAL_INDEX_9";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_10)  return "GPIO_CTRLBOX_DIGITAL_INDEX_10";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_11)  return "GPIO_CTRLBOX_DIGITAL_INDEX_11";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_12)  return "GPIO_CTRLBOX_DIGITAL_INDEX_12";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_13)  return "GPIO_CTRLBOX_DIGITAL_INDEX_13";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_14)  return "GPIO_CTRLBOX_DIGITAL_INDEX_14";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_15)  return "GPIO_CTRLBOX_DIGITAL_INDEX_15";
    if(x == GPIO_CTRLBOX_DIGITAL_INDEX_16)  return "GPIO_CTRLBOX_DIGITAL_INDEX_16";
    // if(x == GPIO_CTRLBOX_DIGITAL_INDEX_17)  return "GPIO_CTRLBOX_DIGITAL_INDEX_17";
    // if(x == GPIO_CTRLBOX_DIGITAL_INDEX_18)  return "GPIO_CTRLBOX_DIGITAL_INDEX_18";
    // if(x == GPIO_CTRLBOX_DIGITAL_INDEX_19)  return "GPIO_CTRLBOX_DIGITAL_INDEX_19";
    // if(x == GPIO_CTRLBOX_DIGITAL_INDEX_20)  return "GPIO_CTRLBOX_DIGITAL_INDEX_20";
    return "to_str err";
}
