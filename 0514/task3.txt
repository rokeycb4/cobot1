def grab():
    set_digital_output(1,0)
    set_digital_output(2,1)

def release():
    set_digital_output(1,1)
    set_digital_output(2,0)


def movez(z):
    """z축 이동"""
    pos = get_current_posx()[0]
    res = trans(pos, [0,0,z,0,0,0], DR_BASE, DR_BASE)
    movel(res, 30, 30) 

def movebase(pos, x, y,z):
    res = trans(pos, [x,y,0,0,0,0], DR_BASE, DR_BASE)
    movel(res, 30, 30) 
    

#alist = [a1,a2,a3]
#blist = [b1,b2,b3]
    
    
a1 = Global_a1
a2 =  trans(a1, [0,-105,0,0,0,0], DR_BASE, DR_BASE)
a3 =  Global_a3
ac = Global_c

# 원판 사이거리
disx =  Global_b1[0] - a1[0]
disy = Global_b1[1] - a1[1]

b1 =  trans(a1, [disx,disy,0,0,0,0], DR_BASE, DR_BASE)
b2 =  trans(a2, [disx,disy,0,0,0,0], DR_BASE, DR_BASE)
b3 =  trans(a3, [disx,disy,0,0,0,0], DR_BASE, DR_BASE)
bc =  trans(ac, [disx,disy,0,0,0,0], DR_BASE, DR_BASE)

# 속도, 가속도
vv,aa = 50,50
vm = 70

# home에서 내려가는 높이 
height = 70

# src에서 잡아서 des으로 이동
def func1(curr, src, des):

    # z값만유지하고 이동
    src[2] = curr[2]
    movel(src, vm, aa)
    
    # 내려서 잡고 올리기
    movez(-height)
    grab()
    wait(1)
    movez(height)
    wait(1)
    
     # z값만유지하고 이동
    des[2] = curr[2]
    movel(des, vm, aa)
    wait(1)
    
    # 내리고 놓고 올리기
    movez(-height)
    release()
    movez(height)

# func1 힘제어 추가
def func2(curr, src, des):
    # z값만유지하고 이동
    src[2] = curr[2]
    movel(src, vm, aa)
    
    # 내려서 잡고 올리기
    movez(-height)
    grab()
    wait(1)
    movez(height)
    wait(1)
    
     # z값만유지하고 이동
    des[2] = curr[2]
    movel(des, vm, aa)
    wait(1)
    
    # 내리고 놓고 올리기
    movez(-50)
    k_d = [3000.0,3000.0,3000.0,200.0,200.0,200.0]
    task_compliance_ctrl(k_d)
    force_desired = 20.0
    f_d = [0,0,-force_desired,0.0,0.0,0.0]
    f_dir = [0,0,1,0,0,0]
    set_desired_force(f_d,f_dir)
    CNT = 0 
    while True:
        tk = get_tool_force()
        #tp_popup("{}".format(get_current_posx()[0][2]))
        if tk[2] > 10:
            if get_current_posx()[0][2]  > 55:
                curr = get_current_posx()[0]
                curr[5] += 3
                movel(curr, 50, 50)
                wait(0.3)
                CNT += 1
                if CNT >7 :
                    tp_popup("NO")
                    release_force()
                    release_compliance_ctrl()
                    break
        elif get_current_posx()[0][2] < 55:
            release_force()
            release_compliance_ctrl()
            break
    
    
    
    release()
    curr = get_current_posx()[0]
    curr[2] = Global_home[2]
    movel(curr,aa,vv)
    
    
release()
home = Global_home
movel(home,vv,aa)
wait(1)

#alist = [a1,a2,a3]
#blist = [b1,b2,b3]

for i in range(10):
    curr = get_current_posx()[0]
    func1(curr, a1,b1)
    func1(curr, a2,b2)
    func1(curr, a3,b3)

    func2(curr, ac, bc)
    
    func1(curr, b1,a1)
    func1(curr, b2,a2)
    func1(curr, b3,a3)
    
    func2(curr, bc, ac)
 


